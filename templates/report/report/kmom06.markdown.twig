
kmom06
------
PhpMetrix verkar mera som ett verktyg för att kunna få en överskådlig blick över kod och klasser. Visst det visas en och annan
varning och det finns en sida “Composer” med paketinformation där det också framgår om paketen borde uppdateras. Bollarna på förstasidan
ger väl också en bild över kodens status men det allmänna intrycket jag får är att det är mest statistik som visas än riktlinjer
för kodning. Sen får man själv avgöra hur vida siffrorna går att använda till något nyttigt eller inte.  
     

Att integrera repot med Scrutinizer var lite “bökigt” i början. Eller rättar sagt integrationen var inget svårt alls det gick fint
men bara få med det man ville var det lite krångel med. Sen fick jag aldrig Cohesion och Coupling att visas i rapporten heller och
det är något störande. Annars tycker jag att det verkar som man har mer direkt nytta av Scrutinizer när det gäller att direkt rätta 
till “Issues” i koden än vad det gäller PhpMetrics. Kodteckning jag hade var väl 18 procent tror jag men då är det mest kod som jag
inte har skapat som testas. Kodkvalitet var 9.87 med betyget (very good) men jag tror inte det säger så mycket.  
     

När man hållit på nåra veckor med sin kod och den sväller och man börjar få svårt själv att hitta i den och förstå hur det hänger ihop.
Och man känner på alla möjliga ställen hur man borde ha gjort egentligen, då är det ingen bra kvalitet på koden. Det kan vara alla möjliga
saker som logik, namn och antal rader.  

Men om man istället kan följa flöden utan problem och inte sitter och undrar vad konstiga namn betyder då kanske man börjar närma sig
lite hyfsad kodkvalitet. Men begreppet kodkvalitet är komplext, om andan faller på och jag gör extrauppgiften i projektet som handlar om
kodkvalitet så skall jag se om jag kan få ett bättre uppfattning om vad det innebär med bra kodkvalitet. Tveksamt om badges är ett direkt
mått på om koden är bra eller dålig, snarare ger det väl en första hint. 
  

TIL för denna veckan: Det finns massor med verktyg som kan vara nyttiga för att skapa bra kod.